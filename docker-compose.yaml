version: "3.9"

services:
  # 🗄 PostgreSQL Database
  drone-transport-service-postgres:
    image: postgres:17.2
    container_name: drone-transport-service-db
    environment:
      POSTGRES_USER: drone_transport
      POSTGRES_PASSWORD: drone_transport
      POSTGRES_DB: drone_transport
    ports:
      - "7432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - drone-transport-service-test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U drone_transport -d drone_transport"]
      interval: 5s
      timeout: 5s
      retries: 5

  # 🚀 Node.js Drone Service
  drone-transport-service-app:
    build:
      context: . # root directory (where your Dockerfile is)
      dockerfile: Dockerfile
    container_name: drone-transport-service-app
    environment:
      NODE_ENV: development
      DB_HOST: drone-transport-service-postgres
      DB_PORT: 5432
      DB_USERNAME: drone_transport
      DB_PASSWORD: drone_transport
      DB_NAME: drone_transport
    depends_on:
      drone-transport-service-postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - drone-transport-service-test
    command: >
      sh -c "
        echo '⏳ Waiting for DB...';
        ./wait-for-db.sh drone-transport-service-postgres;
        echo '🚀 Starting app and seeding DB...';
        pnpm migration:run &&
        pnpm run seed:prod &&
        pnpm run start:prod;
      "

networks:
  drone-transport-service-test:
    driver: bridge

volumes:
  postgres-data:
    driver: local
